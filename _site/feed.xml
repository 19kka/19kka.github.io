<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>19kka</title>
    <description>enjoy your life</description>
    <link>http://19kka.github.com/</link>
    <atom:link href="http://19kka.github.com/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>Shellsort</title>
        <description>&lt;h1 id=&quot;shellsort&quot;&gt;Shellsort&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;最近复习了《数据结构与算法分析》这本书，看到希尔排序的时候感触很深。故欲与大家分享学习。&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;wiki的图解如下&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/19kka/19kka.github.io/master/images/Shellsort-Visual-feel.gif&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;引言
了解希尔排序首先需要了解插入排序。插入排序就与我们自然的排序很像。例如:
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;初始&lt;/th&gt;
      &lt;th&gt;34 8 64 51 32 31&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;移动的位置&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;在&lt;em&gt;p=1&lt;/em&gt;之后&lt;/td&gt;
      &lt;td&gt;8 34 64 51 32 31&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;在&lt;em&gt;p=2&lt;/em&gt;之后&lt;/td&gt;
      &lt;td&gt;8 34 64 51 32 31&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;在&lt;em&gt;p=3&lt;/em&gt;之后&lt;/td&gt;
      &lt;td&gt;8 34 51 64 32 31&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;在&lt;em&gt;p=4&lt;/em&gt;之后&lt;/td&gt;
      &lt;td&gt;8 32 34 51 64 31&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;在&lt;em&gt;p=5&lt;/em&gt;之后&lt;/td&gt;
      &lt;td&gt;8 31 32 34 51 64&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;4&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h5 id=&quot;section&quot;&gt;插入排序分析&lt;/h5&gt;
&lt;p&gt;观察发现其实每次对已经排序的队列也要一一对比。比如 在 4 位置的32 需要比较 64 51 34 8 。但是 64 51 34 本身已经排序过了。&lt;/p&gt;

&lt;p&gt;嵌套循环每一个都必须花费N次迭代，因此插入排序复杂度为O(&lt;script type=&quot;math/tex&quot;&gt;N^2&lt;/script&gt;)。&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;希尔排序&lt;/h2&gt;

&lt;p&gt;名字源于发明者，具体可以在参考链接中查看。这里直接主题了。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;排序本质就是消除逆序数。希尔排序、快速排序等突破二次时间屏障的排序原理相同，交换相隔比较远的元素，使得一次交换能消除一个以上的逆序数。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;希尔排序使用一个序列 &lt;script type=&quot;math/tex&quot;&gt;h_1,h_2 ,...h_t&lt;/script&gt;,叫做增量序列。只要 &lt;script type=&quot;math/tex&quot;&gt;h_1 = 1&lt;/script&gt; ，其它任何增量都是可行的，取值不同最后的效率也会有所不同。
希尔排序重要的性质是一个&lt;script type=&quot;math/tex&quot;&gt;h_{k^-}&lt;/script&gt;排序的文件保持它的&lt;script type=&quot;math/tex&quot;&gt;h_{k^-}&lt;/script&gt;排序性。因为前面各趟排序的结果会被后面各趟排序给打乱。一般增量序列会选择  &lt;script type=&quot;math/tex&quot;&gt;h_t = N/2&lt;/script&gt;和&lt;script type=&quot;math/tex&quot;&gt;h_{k+1}/2&lt;/script&gt;。增量序列有时候可能会对算法性能造成剧烈的影响。&lt;/p&gt;

&lt;p&gt;到这里你如果还没有看懂增量序列什么意思，下图的例子可能会明确一些。
假设增量序列为 ［1，3，5］，排序数组为 [13,81,94,23,45,8,22,41,88,92,99,31,21]&lt;/p&gt;

&lt;p&gt;那么首先我们以 5 为步进 (5组的意思)&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;组1&lt;/th&gt;
      &lt;th&gt;组2&lt;/th&gt;
      &lt;th&gt;组3&lt;/th&gt;
      &lt;th&gt;组4&lt;/th&gt;
      &lt;th&gt;组5&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;81&lt;/td&gt;
      &lt;td&gt;94&lt;/td&gt;
      &lt;td&gt;23&lt;/td&gt;
      &lt;td&gt;45&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;41&lt;/td&gt;
      &lt;td&gt;88&lt;/td&gt;
      &lt;td&gt;92&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;99&lt;/td&gt;
      &lt;td&gt;31&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;对其进行排序&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;组1&lt;/th&gt;
      &lt;th&gt;组2&lt;/th&gt;
      &lt;th&gt;组3&lt;/th&gt;
      &lt;th&gt;组4&lt;/th&gt;
      &lt;th&gt;组5&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;23&lt;/td&gt;
      &lt;td&gt;45&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;31&lt;/td&gt;
      &lt;td&gt;41&lt;/td&gt;
      &lt;td&gt;88&lt;/td&gt;
      &lt;td&gt;92&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;99&lt;/td&gt;
      &lt;td&gt;81&lt;/td&gt;
      &lt;td&gt;94&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;然后结果为 [8,22,21,23,45,13,31,41,88,92,99,81,94] 同理进行以3为步进（3组），最后以1为步进（1组）。&lt;/p&gt;

&lt;p&gt;可以看这个&lt;a href=&quot;http://bubkoo.com/2014/01/15/sort-algorithm/shell-sort/&quot;&gt;blog&lt;/a&gt;，他里面的图表示也十分明确。其实并不是真正的分组，就是就是加快逆序数的位置交换。&lt;/p&gt;

&lt;p&gt;贴上C语言的源代码。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;//
// Created by fan on 16/10/9.
//
#include &quot;stdio.h&quot;

void
Shellsort(int  *A,int N){
    int i , j ,Increment;
    int Tmp;
    int pp = *(A+1);
    int p2 = A[1];
    for (Increment = N /2 ; Increment &amp;gt; 0; Increment /=2 ) {
        for (i = Increment; i &amp;lt; N; i++) {
            Tmp = A[i];
            for (j = i; j &amp;gt;= Increment; j -= Increment) {
                if (Tmp &amp;lt; A[j - Increment])
                    A[j] = A[j - Increment];
                else
                    break;

            }
            A[j] = Tmp;
        }
    }
}
int main(int argc, char *argv[]){
    int  list[5] ={2,13,44,15,3};
     Shellsort(&amp;amp;list,5);

    int i = 0;
    for (i = 0; i &amp;lt; 5; ++i) {
        int a = list[i];
        printf(&quot;%d \n&quot;,a);
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;section-2&quot;&gt;希尔排序最坏情况分析&lt;/h4&gt;

&lt;p&gt;希尔排序运行时间或者说效率十分依赖增量序列的选择。什么时候排序效果最差，举个例子，如果我们选择了一个N是2的幂。这样除了最后一个增量是1之外都是偶数（例如增量 8 4 2 1 ）。且 我们的数组为偶数位 N/2 是最大的数，奇数位为最小的数（例如 [1,9,2,10,3,11,4,12]）。那么前几次排序后，输入队列一直保持不变。&lt;/p&gt;

&lt;p&gt;希尔增量的问题在于，增量对未必互素，因此给出较小的增量可能影响很小。&lt;/p&gt;

&lt;p&gt;具体希尔排序的最坏情况证明涉及到许多的数学运算，这里就不展开说明。有兴趣可以点击下面的参考链接以及Google希尔排序的最坏情况。&lt;/p&gt;

&lt;h4 id=&quot;references&quot;&gt;References:&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Shellsort&quot;&gt;https://en.wikipedia.org/wiki/Shellsort&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://zh.wikipedia.org/wiki/希尔排序&quot;&gt;https://zh.wikipedia.org/wiki/希尔排序&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 17 Oct 2016 21:04:28 +0800</pubDate>
        <link>http://19kka.github.com/algorithm/2016/10/17/Shellsort/</link>
        <guid isPermaLink="true">http://19kka.github.com/algorithm/2016/10/17/Shellsort/</guid>
      </item>
    
      <item>
        <title>SOCKS5 RFC1928</title>
        <description>&lt;h1 id=&quot;socks-protocol-version-5&quot;&gt;SOCKS Protocol Version 5&lt;/h1&gt;

&lt;p&gt;前面部分备忘&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Network Working Group                                           M. Leech
Request for Comments: 1928                    Bell-Northern Research Ltd
Category: Standards Track                                       M. Ganis
                                         International Business Machines
                                                                  Y. Lee
                                                  NEC Systems Laboratory
                                                                R. Kuris
                                                       Unify Corporation
                                                               D. Koblas
                                                  Independent Consultant
                                                                L. Jones
                                                 Hewlett-Packard Company
                                                              March 1996


                        SOCKS Protocol Version 5

Status of this Memo

   This document specifies an Internet standards track protocol for the
   Internet community, and requests discussion and suggestions for
   improvements.  Please refer to the current edition of the &quot;Internet
   Official Protocol Standards&quot; (STD 1) for the standardization state
   and status of this protocol.  Distribution of this memo is unlimited.

Acknowledgments

   This memo describes a protocol that is an evolution of the previous
   version of the protocol, version 4 [1]. This new protocol stems from
   active discussions and prototype implementations.  The key
   contributors are: Marcus Leech: Bell-Northern Research, David Koblas:
   Independent Consultant, Ying-Da Lee: NEC Systems Laboratory, LaMont
   Jones: Hewlett-Packard Company, Ron Kuris: Unify Corporation, Matt
   Ganis: International Business Machines.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;introduction&quot;&gt;Introduction&lt;/h3&gt;

&lt;p&gt;防火墙的使用，有效的隔离了机构的内部网络和外部网络，这种类型的Internet架构变得越来越流行了。这种防火墙系统大都充当着网络之间的应用层网关的角色，通常提供经过控制的Telnet、FTP和SMTP访问。为了推动全球信息的交流，更多的新的应用层协议的推出，这就有必要提供一个总的架构使这些协议能够更明显和更安全的穿过防火墙，也有必要在实际上为它们穿过防火墙时提供一个更强的认证机制。这需要基于客户机-服务器机制在不同组织网络之间实现，而这种联系必须得到控制并且有安全认证。&lt;/p&gt;

&lt;p&gt;在此所描述的协议框架是为了让使用TCP和UDP的客户/服务器应用程序更方便地使用网络防火墙所提供的服务所设计的。这个协议从概念上来讲是介于应用层和传输层之间的“中介层”，因而不提供如发ICMP信息之类的网络层网关服务。&lt;/p&gt;

&lt;h3 id=&quot;existing-practice&quot;&gt;Existing practice&lt;/h3&gt;
&lt;p&gt;-略&lt;/p&gt;

&lt;h3 id=&quot;procedure-for-tcp-based-clients&quot;&gt;Procedure for TCP-based clients&lt;/h3&gt;

&lt;p&gt;当一个基于TCP的客户端想要去建立一个只有通过防火墙才能到达的目标的连接时（例如从开始准备到完成）， 必须打开一个TCP连接到对方的SOCKS服务器的SOCKS端口上。这个SOCKS服务默认在1080端口上，如果这个连接请求成功，客户端就需要协商用哪个加密方法、哪些可用，然后发送转发请求。SOCKS服务器检查这个请求根据结果建立连接或拒绝。&lt;/p&gt;

&lt;p&gt;除非特别注明，在数据包图标里的长度都是十进制的。如果需要给定一个字节值，用X’hh’表示该字节的值。如果用到单词’Variable’,表示长度可变。&lt;/p&gt;

&lt;p&gt;客户端连到服务器后，然后就发送请求来协商版本和认证方法：&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;VAR&lt;/th&gt;
      &lt;th&gt;NMETHODS&lt;/th&gt;
      &lt;th&gt;METHODS&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1 to 255&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;VAR 字段 在这个协议版本中写 X’05’，NMETHODS 中选择一个METHODS中的方法（填写序号）&lt;/p&gt;

&lt;p&gt;服务器从METHODS给出的方法中选出一个，发送选择报文&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;VAR&lt;/th&gt;
      &lt;th&gt;METHOD&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;如果选择的METHOD的值是X’FF’ ，则表示客户端列出的方法是没有可以背接受的，客户端就必须关闭连接。&lt;/p&gt;

&lt;p&gt;现在定义的METHOD的值有：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;X’00’ 无验证&lt;/li&gt;
  &lt;li&gt;X’01’ 通用安全服务应用程序接口（GSSAPI）&lt;/li&gt;
  &lt;li&gt;X’02’ 用户名密码&lt;/li&gt;
  &lt;li&gt;X’03’ to X’7F’ IANA分配&lt;/li&gt;
  &lt;li&gt;X’80’ to X’FE’ 私人保留&lt;/li&gt;
  &lt;li&gt;X’FF’ 无可接受方法&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;之后客户端和服务端对于进入方法细节进行 二次协商（sub-negotiation）。二次协商的描述在独立的文档中。
开发者希望得到新的METHOD支持需要和IANA联系。当前已分配的METHOD号参考文档。如果想顺利的执行则必须支持GSSAPI和支持用户名/密码（USERAE/PASSWORD）认证方法。&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;需求&lt;/h3&gt;

&lt;p&gt;一旦方法选择子商议结束，客户机就发送请求细节。如果商议方法包括了完整性检查的目的或机密性封装，则请求必然被封在方法选择的封装中。&lt;/p&gt;

&lt;p&gt;SOCKS请求如下表所示：&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;VER&lt;/th&gt;
      &lt;th&gt;CMD&lt;/th&gt;
      &lt;th&gt;RSV&lt;/th&gt;
      &lt;th&gt;ATYP&lt;/th&gt;
      &lt;th&gt;DST.ADDR&lt;/th&gt;
      &lt;th&gt;DST.PORT&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;X’00’&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;Variable&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
  &lt;li&gt;VER    protocol version: X’05’&lt;/li&gt;
  &lt;li&gt;CMD
    &lt;ul&gt;
      &lt;li&gt;CONNECT X’01’&lt;/li&gt;
      &lt;li&gt;BIND X’02’&lt;/li&gt;
      &lt;li&gt;UDP ASSOCIATE X’03’&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;RSV    RESERVED&lt;/li&gt;
  &lt;li&gt;ATYP   address type of following address
    &lt;ul&gt;
      &lt;li&gt;IP V4 address: X’01’&lt;/li&gt;
      &lt;li&gt;DOMAINNAME: X’03’&lt;/li&gt;
      &lt;li&gt;IP V6 address: X’04’&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;DST.ADDR       desired destination address&lt;/li&gt;
  &lt;li&gt;DST.PORT desired destination port in network octet
 order&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;SOCKS服务器会评估基于源和目标地址的请求，然后返回一条或几条消息作为合适的请求类型。&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;地址&lt;/h3&gt;
&lt;p&gt;在地址域(DST.ADDR，BND.ADDR)中，ATYP域详细说明了包含在该域内部的地址类型：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;X’01’ 该地址是IPv4地址，长4个八位组。&lt;/li&gt;
  &lt;li&gt;X’03’ 该地址包含一个完全的域名。第一个八位组包含了后面名称的八位组的数目，没有中止的空八位组。&lt;/li&gt;
  &lt;li&gt;X’04’ 该地址是IPv6地址，长16个八位组。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section-2&quot;&gt;回应&lt;/h3&gt;

&lt;p&gt;到SOCKS服务器的连接一经建立，客户机即发送SOCKS请求信息，并且完成认证商议。服务器评估请求，返回一个回应如下表所示：&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;VER&lt;/th&gt;
      &lt;th&gt;REP&lt;/th&gt;
      &lt;th&gt;RSV&lt;/th&gt;
      &lt;th&gt;ATYP&lt;/th&gt;
      &lt;th&gt;BND.ADDR&lt;/th&gt;
      &lt;th&gt;BND.PORT&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;X’00’&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;Variable&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
  &lt;li&gt;VER    protocol version: X’05’&lt;/li&gt;
  &lt;li&gt;REP    Reply field:
    &lt;ul&gt;
      &lt;li&gt;X’00’ succeeded
 	-  X’01’ general SOCKS server failure
 	-  X’02’ connection not allowed by ruleset
 	-  X’03’ Network unreachable
 	-  X’04’ Host unreachable&lt;/li&gt;
      &lt;li&gt;X’05’ Connection refused&lt;/li&gt;
      &lt;li&gt;X’06’ TTL expired&lt;/li&gt;
      &lt;li&gt;X’07’ Command not supported&lt;/li&gt;
      &lt;li&gt;X’08’ Address type not supported&lt;/li&gt;
      &lt;li&gt;X’09’ to X’FF’ unassigned&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;RSV    RESERVED&lt;/li&gt;
  &lt;li&gt;ATYP   address type of following address
    &lt;ul&gt;
      &lt;li&gt;IP V4 address: X’01’&lt;/li&gt;
      &lt;li&gt;DOMAINNAME: X’03’&lt;/li&gt;
      &lt;li&gt;IP V6 address: X’04’&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;BND.ADDR       server bound address&lt;/li&gt;
  &lt;li&gt;BND.PORT       server bound port in network octet order&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;标志RESERVED(RSV)的地方必须设置为X’00’。&lt;/p&gt;

&lt;p&gt;如果被选中的方法包括有认证目的封装，完整性和/或机密性的检查，则回应就被封装在方法选择的封装套中。&lt;/p&gt;

&lt;h4 id=&quot;section-3&quot;&gt;连接&lt;/h4&gt;

&lt;p&gt;在CONNECT的回应中，BND.PORT包括了服务器分配的连接到目标主机的端口号，同时BND.ADDR包含了关联的IP地址。此处所提供的BND.ADDR通常情况不同于客户机连接到SOCKS服务器所用的IP地址，因为这些服务器提供的经常都是多址的(muti-homed)。都期望SOCKS主机能使用DST.ADDR和DST.PORT，连接请求评估中的客户端源地址和端口。&lt;/p&gt;

&lt;h4 id=&quot;section-4&quot;&gt;绑定&lt;/h4&gt;

&lt;p&gt;BIND请求被用在那些需要客户机接受到服务器连接的协议中。FTP就是一个众所周知的例子，它通过使用命令和状态报告建立最基本的客户机-服务器连接，按照需要使用服务器-客户端连接来传输数据。(例如：ls,get,put)都期望在使用应用协议的客户端在使用CONNECT建立首次连接之后仅仅使用BIND请求建立第二次连接。都期望SOCKS主机在评估BIND请求时能够使用ST.ADDR和DST.PORT。&lt;/p&gt;

&lt;p&gt;有两次应答都是在BIND操作期间从SOCKS服务器发送到客户端的。第一次是发送在服务器创建和绑定一个新的socket之后。BIND.PORT域包含了SOCKS主机分配和侦听一个接入连接的端口号。BND.ADDR域包含了关联的IP地址。&lt;/p&gt;

&lt;p&gt;客户端具有代表性的是使用这些信息来通报应用程序连接到指定地址的服务器。第二次应答只是发生在预期的接入连接成功或者失败之后。在第二次应答中，BND.PORT和BND.ADDR域包含了欲连接主机的地址和端口号。&lt;/p&gt;

&lt;h4 id=&quot;udp-associate&quot;&gt;UDP ASSOCIATE&lt;/h4&gt;
&lt;p&gt;-略&lt;/p&gt;

&lt;h3 id=&quot;procedure-for-udp-based-clients&quot;&gt;Procedure for UDP-based clients&lt;/h3&gt;
&lt;p&gt;-略&lt;/p&gt;

&lt;h4 id=&quot;references&quot;&gt;References:&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://www.ietf.org/rfc/rfc1928.txt&quot;&gt;https://www.ietf.org/rfc/rfc1928.txt&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 22 Jul 2016 22:03:18 +0800</pubDate>
        <link>http://19kka.github.com/rfc/2016/07/22/SOCKS5-RFC1928/</link>
        <guid isPermaLink="true">http://19kka.github.com/rfc/2016/07/22/SOCKS5-RFC1928/</guid>
      </item>
    
      <item>
        <title>ssh-copy-id</title>
        <description>&lt;p&gt;###ssh-copy-id&lt;/p&gt;

&lt;p&gt;####Mac :&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;brew install ssh-copy-id&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;####Synopsis:
ssh-copy-id [-i filename] [user@]machine&lt;/p&gt;

&lt;p&gt;####Example:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;ssh-copy-id -i mykey.pub root@1.2.3.4&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If the -i option is given then the identity file (defaults to ~/.ssh/id_rsa.pub) is used, regardless of whether there are any keys in your ssh-agent.&lt;/p&gt;

&lt;p&gt;Once it has one or more fingerprints (by whatever means) it uses ssh to append them to ~/.ssh/authorized_keys on the remote machine (creating the file, and directory, if necessary)&lt;/p&gt;

&lt;p&gt;####References:&lt;br /&gt;
&lt;a href=&quot;http://linux.die.net/man/1/ssh-copy-id&quot;&gt;ssh-copy-id&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Ssh-agent&quot;&gt;ssh-agent wiki&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.freebsd.org/cgi/man.cgi?query=ssh-add&amp;amp;sektion=1&quot;&gt;ssh-add from freebsd&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 26 May 2016 22:03:18 +0800</pubDate>
        <link>http://19kka.github.com/liunx/2016/05/26/ssh-copy-id/</link>
        <guid isPermaLink="true">http://19kka.github.com/liunx/2016/05/26/ssh-copy-id/</guid>
      </item>
    
      <item>
        <title>life -</title>
        <description>&lt;p&gt;#博客也是陆陆续续更新&lt;/p&gt;

&lt;p&gt;生活总在继续，很多时候总觉得自己做的不够好。&lt;/p&gt;

&lt;p&gt;程序员可能刚刚入门，有了学习许多语言的能力。看看ROR，又看看react native。觉得自己学历不高想读在职，想把英语好好学学。一件事都没能坚持下来，一头冲进去，却又放弃。这是这半年我觉得我做的最糟糕的地方。&lt;/p&gt;

&lt;p&gt;工作平平，也只能算是比一般人做的好一些吧。&lt;/p&gt;

&lt;p&gt;做的远远还不够。&lt;/p&gt;
</description>
        <pubDate>Thu, 26 May 2016 22:03:18 +0800</pubDate>
        <link>http://19kka.github.com/life/2016/05/26/life-half-year/</link>
        <guid isPermaLink="true">http://19kka.github.com/life/2016/05/26/life-half-year/</guid>
      </item>
    
      <item>
        <title>iOS Review CheckList</title>
        <description>&lt;p&gt;#iOS审核检查表&lt;/p&gt;

&lt;p&gt;由于本人多次在一些简单的审核问题上重复犯错，故在提交审核之前做一次检查。检查项目如下：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;检查你的 &lt;strong&gt;Bundle Identifier&lt;/strong&gt;&lt;/p&gt;

  &lt;p&gt;检查你的 &lt;strong&gt;Produce ID&lt;/strong&gt; 是否正确&lt;/p&gt;

  &lt;p&gt;检查内购是否顺利&lt;/p&gt;

  &lt;p&gt;检查有关于审核的隐藏项目&lt;/p&gt;

  &lt;p&gt;检查是否提供了可用的测试账号给审核员（建议给出所有的登录方式账号）&lt;/p&gt;

  &lt;p&gt;检查项目的发布环境&lt;/p&gt;

  &lt;p&gt;保证在购买界面没有引导购买项&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Thu, 26 May 2016 22:03:18 +0800</pubDate>
        <link>http://19kka.github.com/ios,xcode,review/2016/05/26/ReviewTips/</link>
        <guid isPermaLink="true">http://19kka.github.com/ios,xcode,review/2016/05/26/ReviewTips/</guid>
      </item>
    
      <item>
        <title>iOS Bulid Tips</title>
        <description>&lt;h2 id=&quot;ios-bulid-tips&quot;&gt;#iOS Bulid Tips&lt;/h2&gt;
&lt;p&gt;汇总了一些编译碰到的问题&lt;/p&gt;

&lt;h2 id=&quot;framework-error&quot;&gt;###Framework Error&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmake&quot;&gt;CodeSign /Users/xx/Library/Developer/Xcode/DerivedData//xx//xx/xx/x/x/x/x/x/xxx/x/xxxx.app/Frameworks/xxxx.framework
    cd //xx//xx/xx/x/x/x/x/x/xxx/x/x
    export CODESIGN_ALLOCATE=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/codesign_allocate
    export PATH=&quot;/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin:/Applications/Xcode.app/Contents/Developer/usr/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin&quot;
    
Signing Identity:     &quot;iPhone Developer: xxxxxxxxx&quot;

    /usr/bin/codesign --force --sign 0B9F657BF598KJDSHFJF*^&amp;amp;FDSKFD229CB0 --preserve-metadata=identifier,entitlements --timestamp=none /Users/xxxxx/Library/Developer/Xcode/DerivedData/xxxxxemo-ffgsdfgsdgejrsdfgvi/Build/Products/Debug-iphoneos/rightAVDemo.app/Frameworks/xxxxxx.framework

/Users/xxx/Library/Developer/Xcode/DerivedData/xxxx-xxxxxdfssdfsdf/Build/Products/Debug-iphoneos/xxxxxx.app/Frameworks/xxxxxxx.framework: bundle format unrecognized, invalid, or unsuitable
Command /usr/bin/codesign failed with exit code 1

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;#####Try to Remove:&lt;br /&gt;
&lt;strong&gt;General -&amp;gt; Embedded Binaries : xxx.Framework&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;–
###Pods Error
&lt;code class=&quot;highlighter-rouge&quot;&gt;
diff: /../Podfile.lock: No such file or directory 
diff: /Manifest.lock: No such file or directory error: 
The sandbox is not in sync with the Podfile.lock. Run &#39;pod install&#39; or update your CocoaPods installation.
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;#####Add User-Defined Setting&lt;/p&gt;

&lt;p&gt;Key:PODS_ROOT
Value:${SRCROOT}/Pods&lt;/p&gt;

&lt;p&gt;–
###Pods Bulid Error
####xxxxx.h header not found&lt;/p&gt;

&lt;p&gt;1
&amp;gt;&lt;br /&gt;
-Use the &lt;code class=&quot;highlighter-rouge&quot;&gt;$(inherited)&lt;/code&gt; flag, or &lt;br /&gt;
-Remove the build settings from the target.&lt;/p&gt;

&lt;p&gt;2.
&amp;gt;
Pods/Target Support Files/Pods/Pods.debug.xcconfig Set to None&lt;/p&gt;

</description>
        <pubDate>Sun, 15 May 2016 22:03:18 +0800</pubDate>
        <link>http://19kka.github.com/ios,xcode,bulid/2016/05/15/DebugTips/</link>
        <guid isPermaLink="true">http://19kka.github.com/ios,xcode,bulid/2016/05/15/DebugTips/</guid>
      </item>
    
      <item>
        <title>Phabricator on Mac</title>
        <description>&lt;h2 id=&quot;phabricator-on-mac&quot;&gt;#Phabricator on Mac&lt;/h2&gt;
&lt;p&gt;本文简述了在Mac上安装Phabricator的基本步骤
######引言
Phabricator 是一个LAMP(Linux,Apache,MySQL,PHP) 应用。需要:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;一个Linux类系统&lt;/li&gt;
  &lt;li&gt;一些基本的系统管理员能力&lt;/li&gt;
  &lt;li&gt;Git&lt;/li&gt;
  &lt;li&gt;PHP,MySQL&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;####安装准备
&amp;gt;Apache,nginx,或者其他的一个web服务器&lt;br /&gt;
&amp;gt;PHP:5.2以上&lt;br /&gt;
&amp;gt;MySQL:建议5.5以上&lt;/p&gt;

&lt;p&gt;这些安装在本文中不涉及，自行Google
###安装
####创建文件夹以及安装依赖&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ mkdir ~/WWW/tools
$ cd ~/WWW/tools
$ git clone https://github.com/phacility/phabricator.git
$ git clone https://github.com/phacility/libphutil.git
$ git clone https://github.com/phacility/arcanist.git
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;####添加Arcanist到你的环境变量路径&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;vi &lt;strong&gt;~/.profile&lt;/strong&gt; or &lt;strong&gt;~/.bashrc&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;add &lt;strong&gt;export PATH=”$HOME/WWW/tools/arcanist/bin:$PATH”&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;save &lt;strong&gt;:wq&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;使配置生效 &lt;strong&gt;source ~/.profile*/&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;测试 &lt;strong&gt;arc help&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;####配置Phabricator&lt;/p&gt;

&lt;p&gt;#####配置apache配置文件&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; vi xxxxx/apache2/httpd.conf
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;&amp;lt;VirtualHost&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;*&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;Change&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;the&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;domain&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;which&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;points&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;your&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;host.&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ServerName&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;phabricator.local.nfl.com&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;   

    &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;Change&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;the&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;you&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&#39;phabricator&#39;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;you&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;checked&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;GitHub&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;following&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;the&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;Installation&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;Guide.&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;Make&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;sure&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;you&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/webroot&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;at&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;the&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;end!&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;DocumentRoot&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/Users/admin/WWW/tools/phabricator/webroot&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;  

    &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;RewriteEngine&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;RewriteRule&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;^/rsrc/(.*)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;     &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;                       &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;QSA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;RewriteRule&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;^/favicon.ico&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;   &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;                       &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;QSA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;RewriteRule&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;^(.*)$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;          &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/index.php?__path__=$&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;QSA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;lt;/VirtualHost&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;





&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;##&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;Allow&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;access&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;the&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;entire&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;WWW&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;directory&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;lt;Directory&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/Users/admin/WWW&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;Options&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;Indexes&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;MultiViews&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;FollowSymLinks&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;AllowOverride&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;All&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;Order&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;allow,deny&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;Allow&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;lt;/Directory&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ServerName&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;localhost&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;em&gt;注意把DocumentRoot 修改为自己的路径 （我的是admin)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;#####将域名解析到本机 :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;span style=&quot;background-color:AliceBlue &quot;&gt;127.0.0.1  phabricator.local.nfl.com&lt;/span&gt; 添加到hosts &lt;span style=&quot;background-color:AliceBlue &quot;&gt;vi /private/etc/hosts&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;之后重启 apache &lt;span style=&quot;background-color:AliceBlue &quot;&gt;$ sudo apachectl -k restart&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;###进行最后设置
用浏览器打开 &lt;a href=&quot;http://phabricator.local.nfl.com/&quot;&gt;phabricator.local.nfl.com&lt;/a&gt; 如果之前的操作都没有问题，这个网页会被打开。
&lt;img src=&quot;https://raw.githubusercontent.com/19kka/19kka.github.io/master/images/pha_01.png&quot; alt=&quot;image&quot; /&gt;
嗯，是这样的图就对了。然后你需要做一些配置，解决它告诉你的issue（一般有20多个）。安装到此结束。&lt;/p&gt;

&lt;hr /&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://secure.phabricator.com/book/phabricator/article/installation_guide/&quot;&gt;https://secure.phabricator.com/book/phabricator/article/installation_guide/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://secure.phabricator.com/book/phabricator/article/arcanist_mac_os_x/&quot;&gt;https://secure.phabricator.com/book/phabricator/article/arcanist_mac_os_x/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Fri, 15 Apr 2016 22:00:18 +0800</pubDate>
        <link>http://19kka.github.com/phabricator,mac,git/2016/04/15/Phabricator/</link>
        <guid isPermaLink="true">http://19kka.github.com/phabricator,mac,git/2016/04/15/Phabricator/</guid>
      </item>
    
      <item>
        <title>Nas on linux(bananapi)</title>
        <description>&lt;p&gt;##Ready
1.Banana Pi&lt;/p&gt;

&lt;p&gt;2.Install ArchLinux(or other linux)&lt;/p&gt;

&lt;p&gt;3.setting sshd_config&lt;/p&gt;

&lt;p&gt;–&lt;/p&gt;

&lt;p&gt;##1.DDNS
1.apt-get update&lt;/p&gt;

&lt;p&gt;2.install dig for ddns&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apt-get install dnsutils
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;3.–&amp;gt;此处添加ddns python代码&lt;/p&gt;

&lt;p&gt;4.add rc.local&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; vi /etc/rc.local
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;##2.mount device&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;	&lt;span class=&quot;n&quot;&gt;diskutil&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;unmountDisk&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dev&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;diskN&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
        <pubDate>Mon, 15 Feb 2016 22:00:18 +0800</pubDate>
        <link>http://19kka.github.com/linux,bananapi/2016/02/15/NAS-Server/</link>
        <guid isPermaLink="true">http://19kka.github.com/linux,bananapi/2016/02/15/NAS-Server/</guid>
      </item>
    
      <item>
        <title>Writing Images on MacOS</title>
        <description>&lt;p&gt;##1.Be root or your are root(admin)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;su
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;##2.unmount Disk&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;	&lt;span class=&quot;n&quot;&gt;diskutil&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;####find your disk then unmount it&lt;/p&gt;

&lt;p&gt;looks like 
/dev/disk0
………..TYPE NAME…&lt;/p&gt;

&lt;p&gt;/dev/disk1
……..XXX…XXX&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;	&lt;span class=&quot;n&quot;&gt;diskutil&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;unmountDisk&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dev&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;diskN&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;you will see:
xxxxxx diskN was successful&lt;/p&gt;

&lt;p&gt;##3.Use the ‘dd’&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo dd if=xxx.iso of=/dev/sdX bs=4096
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Mon, 15 Feb 2016 22:00:18 +0800</pubDate>
        <link>http://19kka.github.com/linux/2016/02/15/DD-Img-on-mac/</link>
        <guid isPermaLink="true">http://19kka.github.com/linux/2016/02/15/DD-Img-on-mac/</guid>
      </item>
    
      <item>
        <title>在真实的世界的WebRTC (一)（译）</title>
        <description>&lt;p&gt;####原文地址&lt;a href=&quot;http://www.html5rocks.com/en/tutorials/webrtc/infrastructure/&quot;&gt;http://www.html5rocks.com/en/tutorials/webrtc/infrastructure/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;译者注释：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Signaling翻译的时候有时候写作 信令 有时候写作信号。&lt;/li&gt;
  &lt;li&gt;部分图片在墙内可能无法显示&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;p&gt;WebRTC允许P2P的连接。但是，
WebRTC还是需要一些服务器:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;为客户端配合交换元数据的连接：这个叫做信号(signaling)&lt;/li&gt;
  &lt;li&gt;为了对付网络地址转换(NATs)和防火墙&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;本文中我们会告诉你如何去建立一个信令服务器，以及如何去处理在真实世界中的连接(real-world connectivity)使用STUN和TURN服务器出现的一些难以预料的情况。我们也解释WebRTC应用是如何使用服务器处理多方呼叫和相互配合(例如VoIP和PSTN 也称为电话)。&lt;/p&gt;

&lt;p&gt;如果你不熟悉WebRTC的基础知识，我们强烈建议你在看本文之前先去看&lt;a href=&quot;http://www.html5rocks.com/en/tutorials/webrtc/basics/&quot;&gt;Getting Started With WebRTC&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;###什么是信号（信令）（Signaling）
信令是用来协调连接的过程。WebRTC应用有序的建立一个呼叫，客户端需要交换一些信息：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;会话控制消息用来打开或者关闭连接&lt;/li&gt;
  &lt;li&gt;错误消息&lt;/li&gt;
  &lt;li&gt;多媒体元数据就像&lt;b&gt;多媒体数字信号编解码器(codec)和多媒体数字信号编解码器的设置&lt;/b&gt;，带宽和多媒体类型。&lt;/li&gt;
  &lt;li&gt;密钥数据，建立加密的连接&lt;/li&gt;
  &lt;li&gt;网络数据，比如主机外网的IP地址和端口&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这个发信令的过程需要一条让客户端接收与发送消息的路径。这个结构在WebRTC的API中没有实现：你需要自己去建立。我们会下在下方描述一些建立信令服务器的方法。首先如何，然后如何，还有一些简单的来龙去脉。&lt;/p&gt;

&lt;p&gt;###为什么发信令没有在WebRTC中定义？&lt;/p&gt;

&lt;p&gt;为了避免过多的冗余和最大限度的兼容已有的技术，信令方法和协议没有被规定在WebRTC的标准当中。这个处理方式被JESP写在&lt;a href=&quot;http://tools.ietf.org/html/draft-ietf-rtcweb-jsep-03#section-1.1&quot;&gt; JavaScript Session Establishment Protocol&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The thinking behind WebRTC call setup has been to fully specify and control the media plane, but to leave the signaling plane up to the application as much as possible. The rationale is that different applications may prefer to use different protocols, such as the existing SIP or Jingle call signaling protocols, or something custom to the particular application, perhaps for a novel use case. In this approach, the key information that needs to be exchanged is the multimedia session description, which specifies the necessary transport and media configuration information necessary to establish the media plane.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;JSEP的结构也避免浏览器不得不去保存状态：那就是去搞一个信令状态机。这样可能会带来一个问题，举例来说，信令数据每次都会在一个页面刷新的时候丢失，相反信号状态可以保存在服务器上。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.html5rocks.com/en/tutorials/webrtc/infrastructure/jsep.png&quot; alt=&quot;JSEP architecture&quot; /&gt;&lt;/p&gt;
&lt;center&gt;JESP architecture&lt;/center&gt;

&lt;p&gt;JESP要求交换双发给出邀请和回答：前面提到的多媒体元数据。邀请和回答被连接用在&lt;b&gt;会话描述协议的格式(Session Description Protocol format SDP)&lt;/b&gt;中。格式看起来像这样：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;v=0&lt;br /&gt;
o=- 7614219274584779017 2 IN IP4 127.0.0.1&lt;br /&gt;
s=-&lt;br /&gt;
t=0 0&lt;br /&gt;
a=group:BUNDLE audio video&lt;br /&gt;
a=msid-semantic: WMS&lt;br /&gt;
m=audio 1 RTP/SAVPF 111 103 104 0 8 107 106 105 13 126&lt;br /&gt;
c=IN IP4 0.0.0.0&lt;br /&gt;
a=rtcp:1 IN IP4 0.0.0.0&lt;br /&gt;
a=ice-ufrag:W2TGCZw2NZHuwlnf&lt;br /&gt;
a=ice-pwd:xdQEccP40E+P0L5qTyzDgfmW&lt;br /&gt;
a=extmap:1 urn:ietf:params:rtp-hdrext:ssrc-audio-level&lt;br /&gt;
a=mid:audio&lt;br /&gt;
a=rtcp-mux&lt;br /&gt;
a=crypto:1 AES_CM_128_HMAC_SHA1_80 inline:  9c1AHz27dZ9xPI91YNfSlI67/EMkjHHIHORiClQe&lt;br /&gt;
a=rtpmap:111 opus/48000/2&lt;br /&gt;
…&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;想要知道SDP的全部官方的解释？看这里&lt;a href=&quot;http://datatracker.ietf.org/doc/draft-nandakumar-rtcweb-sdp/?include_text=1&quot;&gt;IETF&lt;/a&gt;的例子。&lt;/p&gt;

&lt;p&gt;记住WebRTC被设计在邀请或者回答设置本地或者远程的描述之前微调，&lt;em&gt;（感觉翻译的不太好，原文是这样的：Bear in mind that WebRTC is designed so that the offer or answer can be tweaked before being set as the local or remote description）&lt;/em&gt;通过编辑SDP文本中的值。举例：perferAudioCodec()函数在apprtc.appspot.com能用于设置默认的编解码器和比特率。SDP用JavaScript操作起来有点痛苦，这里有些讨论关于未来WebRTC版本中是否需要用JSON替代，但是SDP也有点优点让人坚持使用。&lt;/p&gt;

&lt;p&gt;###RTCPeerConnection+信号：邀请，回答和申请者
RTCPeerConnection是用于创建节点的连接和通信，音频和视频的API。
初始化这个过程RTCPeerConnection有两个任务：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;确定本地媒体设备条件，比如分辨率、编码能力。这些是用于请求和回答的元数据。&lt;/li&gt;
  &lt;li&gt;为应用的主机地址获取潜在的网络地址作为候选。一旦本地数据确立，这个会通过远程信令机制进行交换。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;想想一下 Alice 呼叫 Eve。下面是一个完整的呼叫回答过程：&lt;br /&gt;
1. Alice创建了一个RTCPeerConnection对象&lt;br /&gt;
2. Alice创建了一个offer（一个SDP会话描述）用RTCPeerConnection createOffer()这个方法&lt;br /&gt;
3. Alice调用offer的setLocalDescription()
4. Alice讲offer字符串化并使用信令机制发送给Eve
5. Eve调用setRemoteDescipition()，所以她的RTCPeerConnection知道Alice的设置
6. Eve调用createAnswer(),然后成功回调通过一个本地的会话描述：Eve的answer
7. Eve调用setLocalDescription()设定她的answer作为本地描述 
8. Eve使用信令机制发送她字符串化之后的answer给Alice，Alice根据Eve的answer座位远程的会话描述使用setRemoteDescription()这个方法&lt;/p&gt;

&lt;p&gt;搞定。
Alice和Eve同样也需要交换网络信息。使用ICE框架找到网络接口和端口的过程就是“寻找候选人”的意思。&lt;/p&gt;

&lt;p&gt;Alice用Onicecandidate handle创建RTCPeerConnection对象。这个Handle当网络候选人可用的时候被调用。
在这个Handle中，Alice发送序列号的获选人信息给Eve，通过他们的信令频道。
当Eve从Alice那获取到到候选人信息时，她就调用addIceCandidate()去添加候选人给远程节点描述(remote peer description)
JSEP支持ICE候选人流动？，它允许呼叫者提供候选人的一些信息但并不用在线。也不用等待所有的候选人到达。&lt;/p&gt;

&lt;p&gt;###为WebRTC的信令编程
下面完整总结了信令流程的&lt;a href=&quot;http://www.w3.org/TR/webrtc/#simple-peer-to-peer-example&quot;&gt;W3C&lt;/a&gt;代码示例。这个代码假定一些信号机制，SignalingChannel。信令会在下面更详细的讨论。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;signalingChannel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SignalingChannel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;configuration&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s1&quot;&gt;&#39;iceServers&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;&#39;url&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;stun:stun.example.org&#39;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// call start() to initiate&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;pc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;RTCPeerConnection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;configuration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// send any ice candidates to the other peer&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;pc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onicecandidate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;evt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;evt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;candidate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;signalingChannel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stringify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
        &lt;span class=&quot;s1&quot;&gt;&#39;candidate&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;evt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;candidate&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}));&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// let the &#39;negotiationneeded&#39; event trigger offer generation&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;pc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onnegotiationneeded&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;pc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createOffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;localDescCreated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;logError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// once remote stream arrives, show it in the remote video element&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;pc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onaddstream&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;evt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;remoteView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createObjectURL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;evt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// get a local stream, show it in a self-view and add it to be sent&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;navigator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getUserMedia&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;&#39;audio&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;&#39;video&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;selfView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createObjectURL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;pc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addStream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;logError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;localDescCreated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;desc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;pc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setLocalDescription&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;desc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;signalingChannel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stringify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
      &lt;span class=&quot;s1&quot;&gt;&#39;sdp&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;localDescription&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}));&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;logError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;signalingChannel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onmessage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;evt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;evt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sdp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;pc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setRemoteDescription&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;RTCSessionDescription&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sdp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;// if we received an offer, we need to answer&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;remoteDescription&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;offer&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;pc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createAnswer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;localDescCreated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;logError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;logError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;pc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addIceCandidate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;RTCIceCandidate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;candidate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;logError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;: &#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;想了解的过程可以参考&lt;a href=&quot;http://simpl.info/rtcpeerconnection/&quot;&gt;simpl.info/pc&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;###发现小伙伴
这句话的意思是，如何找到对方。&lt;/p&gt;

&lt;p&gt;用于电话呼叫，我们有电话号码和目录。对于网络视频聊天和短信，我们需要的身份和状态管理系统，并为用户发起会话的手段。实现WebRTC的应用程序需要一种方式，为客户发信号给对方自己要启动或加入呼叫。&lt;/p&gt;

&lt;p&gt;同伴发现机制没有在WebRTC中实现，也不会去实现。这个过程可以很简单，如电子邮件或短信网址：用于视频聊天等应用talky.io，tawk.com和browsermeeting.com你分享一个自定义链接邀请的人打来的电话。开发者Chris已经建立了一个耐人寻味的服务器，实现WebRTC的实验，使实现WebRTC呼叫参与任何消息服务，他们喜欢的，比如IM，电子邮件等交流方式。&lt;/p&gt;

</description>
        <pubDate>Mon, 16 Nov 2015 17:20:18 +0800</pubDate>
        <link>http://19kka.github.com/webrtc,ios/2015/11/16/WebRTC-in-the-real-world/</link>
        <guid isPermaLink="true">http://19kka.github.com/webrtc,ios/2015/11/16/WebRTC-in-the-real-world/</guid>
      </item>
    
  </channel>
</rss>
